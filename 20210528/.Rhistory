pars = c("alpha","beta","sigma")
)
data_list <- list(
N = 100,
y = y_obs,
x = x_obs
)
mcmc_result <- stan(
file = "simple_reg_0507.stan",
data = data_list,
seed = 1,
chains = 4,
warmup = 1000,
iter = 2000,
thin = 1
)
print(mcmc_result, probs = c(0.025,0.5,0.975))
mcmc_sample <- rstan::extract(mcmc_result,permuted=FALSE)
mcmc_combo(
mcmc_sample,
pars = c("alpha","beta","sigma")
)
mcmc_sample$mean
mean(mcmc_sample)
mcmc_sample
mcmc_sample["alpha"]
mcmc_sample[,,"alpha"]
mcmc_result$alpha
View(mcmc_result)
mean(mcmc_result[,,"alpha"])
mean(mcmc_sample[,,"alpha"])
alpha_hat <- mean(mcmc_sample[,,"alpha"])
beta_hat <- mean(mcmc_sample[,,"beta"])
sigma_hat <- mean(mcmc_sample[,,"sigma"])
x_next = c(4,8,12,1,5.5)
alpha_hat <- mean(mcmc_sample[,,"alpha"])
beta_hat <- mean(mcmc_sample[,,"beta"])
sigma_hat <- mean(mcmc_sample[,,"sigma"])
y_next_hatp <- alpha_hat + beta_hat*x_next
fig_10 <- plotly(x=~x_obs,y=~y_obs) %>%
add_trace(x=~x_next,y=~y_next_hatp,
name = "predict",
mode = "markers")
x_next = c(4,8,12,1,5.5)
alpha_hat <- mean(mcmc_sample[,,"alpha"])
beta_hat <- mean(mcmc_sample[,,"beta"])
sigma_hat <- mean(mcmc_sample[,,"sigma"])
y_next_hatp <- alpha_hat + beta_hat*x_next
fig_10 <- plotly(x=x_obs,y=y_obs) %>%
add_trace(x=x_next,y=y_next_hatp,
name = "predict",
mode = "markers")
fig_10 <- plotly(x=x_obs,y=y_obs)
set.seed(5)
x_obs <- runif(100,-10,10)
y_obs <- 6 + 2*x_obs + rnorm(100,0,3)
d <- data.frame(x=x_obs,y=y_obs)
head(d)
g_s <- ggplot(d,aes(x=x,y=y)) + geom_point() + ggtitle("observation")
plot(g_s)
fig_10 <- plot_ly(x=~x_obs,y=~y_obs,mode="marker")
fig_10
fig_10 <- plot_ly(x=~x_obs,y=~y_obs,mode="markers")
fig_10
fig_10 <- plot_ly(x=~x_obs,y=~y_obs,mode="markers") %>%
add_trace(x=~x_next,y=~y_next_hatp , name = 'trace 2', mode = 'markers')
fig_10
fig_10 <- plot_ly(x=x_obs,y=y_obs,mode="markers")
fig_10 <- fig_10 %>% add_trace(x=x_next,y=y_next_hatp,name='trace 2',mode = 'line')
fig_10
fig_10 <- plot_ly(x=x_obs,y=y_obs,mode="markers")
fig_10
fig_10 <- plot_ly(x=x_obs,y=y_obs,mode="markers")
fig_11 <- plot_ly(x=x_next,y=y_next_hatp,name='trace 2',mode = 'line')
list(fig_10,fig_11)
diamonds1 <- diamonds[which(diamonds$cut == "Fair"),]
density1 <- density(diamonds1$carat)
diamonds2 <- diamonds[which(diamonds$cut == "Ideal"),]
density2 <- density(diamonds2$carat)
fig <- plot_ly(x = ~density1$x, y = ~density1$y, type = 'scatter', mode = 'lines', name = 'Fair cut', fill = 'tozeroy')
fig <- fig %>% add_trace(x = ~density2$x, y = ~density2$y, name = 'Ideal cut', fill = 'tozeroy')
fig <- fig %>% layout(xaxis = list(title = 'Carat'),
yaxis = list(title = 'Density'))
fig
fig_10 <- plot_ly(x=x_obs,y=y_obs,name='observation',mode="markers")
fig_10 <- fig_10 %>% add_trace(x=x_next,y=y_next_hatp,name='predict',mode ='line')
fig_10
fig_10 <- plot_ly(x=x_obs,y=y_obs,name='observation',mode="markers",fill = 'tozeroy')
fig_10 <- fig_10 %>% add_trace(x=x_next,y=y_next_hatp,name='predict',mode ='markers',fill = 'tozeroy')
fig_10
fig_10 <- plot_ly(x=x_obs,y=y_obs,name='observation',type="scatter",mode ='markers')
fig_10 <- fig_10 %>% add_trace(x=x_next,y=y_next_hatp,name='predict',type="scatter",mode ='markers')
fig_10
y_next_hatp <- alpha_hat + beta_hat*x_next
fig_10 <- plot_ly(x=x_obs,y=y_obs,name='observation',type="scatter",mode ='markers')
fig_10 <- fig_10 %>% add_trace(x=x_next,y=y_next_hatp,name='predict',type="scatter",mode ='lines+marker')
fig_10
x_next = c(-9.5,8,12,1,5.5)
alpha_hat <- mean(mcmc_sample[,,"alpha"])
beta_hat <- mean(mcmc_sample[,,"beta"])
sigma_hat <- mean(mcmc_sample[,,"sigma"])
y_next_hatp <- alpha_hat + beta_hat*x_next
fig_10 <- plot_ly(x=x_obs,y=y_obs,name='observation',type="scatter",mode ='markers')
fig_10 <- fig_10 %>% add_trace(x=x_next,y=y_next_hatp,name='predict',type="scatter",mode ='lines+marker')
fig_10
y_next_hatp <- alpha_hat + beta_hat*x_next
fig_10 <- plot_ly(x=x_obs,y=y_obs,name='observation',type="scatter",mode ='markers')
fig_10 <- fig_10 %>% add_trace(x=x_next,y=y_next_hatp,name='point_predict',type="scatter",mode ='lines+marker')
fig_10
x_next = c(-9.5,8,12,1,5.5)
for (i in 1:length(x_next)){
x_range <- seq(x_next[i]-6,x_next[i]+6,0.1)
yhat_prob <- dnorm(x=alpha_hat+x_range*beta_hat,
mean=alpha_hat+x_next[i]*beta_hat,
sigma=sigma_hat)
fig <- plot_ly(x=x_range,y=~yhat_prob,title="x_next ="+as.character(x_next[1]))
}
x_next = c(-9.5,8,12,1,5.5)
for (i in 1:length(x_next)){
x_range <- seq(x_next[i]-6,x_next[i]+6,0.1)
yhat_prob <- dnorm(x=alpha_hat+x_range*beta_hat,
mean=alpha_hat+x_next[i]*beta_hat,sigma=sigma_hat)
fig <- plot_ly(x=x_range,y=~yhat_prob,title="x_next ="+as.character(x_next[1]))
}
x_next = c(-9.5,8,12,1,5.5)
for (i in 1:length(x_next)){
x_range <- seq(x_next[i]-6,x_next[i]+6,0.1)
yhat_prob <- dnorm(x=alpha_hat+x_range*beta_hat,
mean=alpha_hat+x_next[i]*beta_hat,sd=sigma_hat)
fig <- plot_ly(x=x_range,y=~yhat_prob,title="x_next ="+as.character(x_next[1]))
}
x_next = c(-9.5,8,12,1,5.5)
for (i in 1:length(x_next)){
x_range <- seq(x_next[i]-6,x_next[i]+6,0.1)
yhat_prob <- dnorm(x=alpha_hat+x_range*beta_hat,
mean=alpha_hat+x_next[i]*beta_hat,sd=sigma_hat)
fig <- plot_ly(x=x_range,y=~yhat_prob) %>% layout(title = 'x_next ='+as.character(x_next[i]))
}
x_next = c(-9.5,8,12,1,5.5)
for (i in 1:length(x_next)){
x_range <- seq(x_next[i]-6,x_next[i]+6,0.1)
yhat_prob <- dnorm(x=alpha_hat+x_range*beta_hat,
mean=alpha_hat+x_next[i]*beta_hat,sd=sigma_hat)
fig <- plot_ly(x=x_range,y=~yhat_prob) %>% layout(title = 'x_next =')
fig
}
x_next = c(-9.5,8,12,1,5.5)
for (i in 1:length(x_next)){
x_range <- seq(x_next[i]-6,x_next[i]+6,0.1)
yhat_prob <- dnorm(x=alpha_hat+x_range*beta_hat,
mean=alpha_hat+x_next[i]*beta_hat,sd=sigma_hat)
fig <- plot_ly(x=x_range,y=~yhat_prob) %>% layout(title = 'x_next =')
}
fig
x_next = c(-9.5,8,12,1,5.5)
for (i in 1:length(x_next)){
x_range <- seq(x_next[i]-6,x_next[i]+6,0.1)
yhat_prob <- dnorm(x=alpha_hat+x_range*beta_hat,
mean=alpha_hat+x_next[i]*beta_hat,sd=sigma_hat)
fig <- plot_ly(x=x_range,y=~yhat_prob) %>% layout(title = 'x_next =')
fig
}
x_next = c(-9.5,8,12,1,5.5)
for (i in 1:length(x_next)){
x_range <- seq(x_next[i]-6,x_next[i]+6,0.1)
yhat_prob <- dnorm(x=alpha_hat+x_range*beta_hat,
mean=alpha_hat+x_next[i]*beta_hat,sd=sigma_hat)
fig <- plot_ly(x=x_range,y=~yhat_prob) %>% layout(title = 'x_next =')
print(fig)
}
x_next = c(-9.5,8,12,1,5.5)
for (i in 1:length(x_next)){
x_range <- seq(x_next[i]-6,x_next[i]+6,0.1)
yhat_prob <- dnorm(x=alpha_hat+x_range*beta_hat,
mean=alpha_hat+x_next[i]*beta_hat,sd=sigma_hat)
fig <- plot_ly(x=x_range,y=~yhat_prob) %>% layout(title = paste('x_next =',as.character(x_next[i])))
print(fig)
}
x_next = c(-9.5,8,12,1,5.5)
upp_96pi = rep(0,5)
low_96pi = rep(0,5)
for (i in 1:length(x_next)){
x_range <- seq(x_next[i]-6,x_next[i]+6,0.1)
yhat_prob <- dnorm(x=alpha_hat+x_range*beta_hat,
mean=alpha_hat+x_next[i]*beta_hat,sd=sigma_hat)
low_96pi[i] <- qnorm(0.05,mean=alpha_hat+x_next[i]*beta_hat,sd=sigma_hat)
upp_96pi[i] <- qnorm(0.95,mean=alpha_hat+x_next[i]*beta_hat,sd=sigma_hat)
fig <- plot_ly(x=x_range,y=~yhat_prob) %>%
layout(title = paste('x_next =',as.character(x_next[i]),
',95%PI=[',as.character(low_96pi[i]),
as.character(upp_96pi[i],']')))
print(fig)
}
x_next = c(-9.5,8,12,1,5.5)
upp_96pi = rep(0,5)
low_96pi = rep(0,5)
for (i in 1:length(x_next)){
yhat_range <- seq(alpha_hat+beta_hat*x_next[i]-6,alpha_hat+beta_hat*x_next[i]+6,0.1)
yhat_prob <- dnorm(x=alpha_hat+x_range*beta_hat,
mean=alpha_hat+x_next[i]*beta_hat,sd=sigma_hat)
low_96pi[i] <- qnorm(0.05,mean=alpha_hat+x_next[i]*beta_hat,sd=sigma_hat)
upp_96pi[i] <- qnorm(0.95,mean=alpha_hat+x_next[i]*beta_hat,sd=sigma_hat)
fig <- plot_ly(x=yhat_range,y=~yhat_prob) %>%
layout(title = paste('x_next =',as.character(x_next[i]),
',95%PI=[',as.character(round(low_96pi[i],digits = 4)),
as.character(round(upp_96pi[i],digits = 4)),']'))
print(fig)
}
x_next = c(-9.5,8,12,1,5.5)
upp_96pi = rep(0,5)
low_96pi = rep(0,5)
for (i in 1:length(x_next)){
yhat_range <- seq(alpha_hat+beta_hat*x_next[i]-6,alpha_hat+beta_hat*x_next[i]+6,0.1)
yhat_prob <- dnorm(x=yhat_range,
mean=alpha_hat+x_next[i]*beta_hat,sd=sigma_hat)
low_96pi[i] <- qnorm(0.05,mean=alpha_hat+x_next[i]*beta_hat,sd=sigma_hat)
upp_96pi[i] <- qnorm(0.95,mean=alpha_hat+x_next[i]*beta_hat,sd=sigma_hat)
fig <- plot_ly(x=yhat_range,y=~yhat_prob) %>%
layout(title = paste('x_next =',as.character(x_next[i]),
',95%PI=[',as.character(round(low_96pi[i],digits = 4)),
as.character(round(upp_96pi[i],digits = 4)),']'))
print(fig)
}
x_next = c(-9.5,8,12,1,5.5)
upp_96pi = rep(0,5)
low_96pi = rep(0,5)
for (i in 1:length(x_next)){
yhat_range <- seq(alpha_hat+beta_hat*x_next[i]-6,alpha_hat+beta_hat*x_next[i]+6,0.1)
yhat_prob <- dnorm(x=yhat_range,
mean=alpha_hat+x_next[i]*beta_hat,sd=sigma_hat)
low_96pi[i] <- qnorm(0.05,mean=alpha_hat+x_next[i]*beta_hat,sd=sigma_hat)
upp_96pi[i] <- qnorm(0.95,mean=alpha_hat+x_next[i]*beta_hat,sd=sigma_hat)
fig <- plot_ly(x=yhat_range,y=~yhat_prob) %>%
layout(title = paste('x_next =',as.character(x_next[i]),
',95%PI=[',as.character(round(low_96pi[i],digits = 4)),
as.character(round(upp_96pi[i],digits = 4)),']',
'PP =',as.character(alpha_hat+x_next[i]*beta_hat)))
print(fig)
}
x_next = c(-9.5,8,12,1,5.5)
upp_96pi = rep(0,5)
low_96pi = rep(0,5)
for (i in 1:length(x_next)){
yhat_range <- seq(alpha_hat+beta_hat*x_next[i]-6,alpha_hat+beta_hat*x_next[i]+6,0.1)
yhat_prob <- dnorm(x=yhat_range,
mean=alpha_hat+x_next[i]*beta_hat,sd=sigma_hat)
low_96pi[i] <- qnorm(0.05,mean=alpha_hat+x_next[i]*beta_hat,sd=sigma_hat)
upp_96pi[i] <- qnorm(0.95,mean=alpha_hat+x_next[i]*beta_hat,sd=sigma_hat)
fig <- plot_ly(x=yhat_range,y=~yhat_prob) %>%
layout(title = paste('x_next =',as.character(x_next[i]),
',95%PI=[',as.character(round(low_96pi[i],digits = 4)),
as.character(round(upp_96pi[i],digits = 4)),'],',
'PP =',as.character(round(alpha_hat+x_next[i]*beta_hat,digits = 4))))
print(fig)
}
fig_12 <- fig_10 %>%
add_trace(x=x_next,y=low_96pi,name='point_predict',type="scatter",mode ='lines+marker') %>%
add_trace(x=x_next,y=upp_96pi,name='point_predict',type="scatter",mode ='lines+marker') %>%
layout(title= 'predict with 95% PI')
fig_12
fig_12 <- fig_10 %>%
add_trace(x=x_next,y=low_96pi,name='point_predict',type="scatter",mode ='lines+marker',line=list(color = 'yellow', width=2, dash='dot')) %>%
add_trace(x=x_next,y=upp_96pi,name='point_predict',type="scatter",mode ='lines+marker',line=list(color = 'yellow', width=2, dash='dot')) %>%
layout(title= 'predict with 95% PI')
fig_12
fig_12 <- fig_10 %>%
add_trace(x=x_next,y=low_96pi,name='lower_95PI',type="scatter",mode ='lines+marker',line=list(color = 'yellow', width=2, dash='dot')) %>%
add_trace(x=x_next,y=upp_96pi,name='lower_95PI',type="scatter",mode ='lines+marker',line=list(color = 'yellow', width=2, dash='dot')) %>%
layout(title= 'predict with 95% PI')
fig_12
fig_12 <- fig_10 %>%
add_trace(x=x_next,y=low_96pi,name='95PI',type="scatter",mode ='lines+marker',line=list(color = 'yellow', width=2, dash='dot')) %>%
add_trace(x=x_next,y=upp_96pi,name='95PI',type="scatter",mode ='lines+marker',line=list(color = 'yellow', width=2, dash='dot')) %>%
layout(title= 'predict with 95% PI')
fig_12
fig_12 <- fig_10 %>%
add_trace(x=x_next,y=low_96pi,name='95PI',type="scatter",mode ='lines+marker',line=list(color = 'yellow', width=2, dash='dot')) %>%
add_trace(x=x_next,y=upp_96pi,name='95PI',type="scatter",mode ='lines+marker',line=list(color = 'yellow', width=2, dash='dot')) %>%
layout(title= 'Point Prediction and 95% Prediction Interval')
fig_12
fig_12 <- fig_10 %>%
add_trace(x=x_next,y=low_96pi,name='lower_95PI',type="scatter",mode ='lines+marker',line=list(color = 'yellow', width=2, dash='dot')) %>%
add_trace(x=x_next,y=upp_96pi,name='upper_95PI',type="scatter",mode ='lines+marker',line=list(color = 'yellow', width=2, dash='dot')) %>%
layout(title= 'Point Prediction and 95% Prediction Interval')
fig_12
fig_12 <- fig_10 %>%
add_trace(x=x_next,y=low_96pi,name='lower_upper_95PI',type="scatter",mode ='lines+marker',line=list(color = 'yellow', width=2, dash='dot')) %>%
add_trace(x=x_next,y=upp_96pi,type="scatter",mode ='lines+marker',line=list(color = 'yellow', width=2, dash='dot')) %>%
layout(title= 'Point Prediction and 95% Prediction Interval')
fig_12
fig_12 <- fig_10 %>%
add_trace(x=x_next,y=low_96pi,name='lower_95PI',type="scatter",mode ='lines+marker',line=list(color = 'yellow', width=2, dash='dot')) %>%
add_trace(x=x_next,y=upp_96pi,name='upper_95PI',type="scatter",mode ='lines+marker',line=list(color = 'yellow', width=2, dash='dot')) %>%
layout(title= 'Point Prediction and 95% Prediction Interval')
fig_12
ss <- 100
x_obs <- runif(ss,-10,10)
y_obs <- 6 + 2*x_obs + rnorm(ss,0,3)
d <- data.frame(x=x_obs,y=y_obs)
head(d)
g_s <- ggplot(d,aes(x=x,y=y)) + geom_point() + ggtitle("observation")
plot(g_s)
alpha_real <- seq(3,10,0.05)
prior_a <-  rep(density_c,length(alpha_real))
plot(alpha_real,prior_a)
beta_real <- seq(0,5,0.05)
prior_b <-  rep(density_c,length(beta_real))
plot(beta_real,prior_b)
sigma_real <- seq(0,5,0.05)
prior_s <-  rep(density_c,length(sigma_real))
plot(sigma_real,prior_s)
prior_ab <- matrix(density_c,nrow=length(alpha_real),ncol=length(beta_real))
likelihood_f <- function(alpha,beta,sigma){
return(prod(dnorm(y_obs-alpha-beta*x_obs,mean=0,sd=sigma)))
}
likelihoods <- array(0,dim=c(length(alpha_real),length(beta_real),length(sigma_real)))
kernels <- array(0,dim=c(length(alpha_real),length(beta_real),length(sigma_real)))
for (i in 1:length(alpha_real)){
for (j in 1:length(beta_real)) {
for (k in 1:length(sigma_real)) {
likelihoods[i,j,k] <- likelihood_f(alpha_real[i],beta_real[j],sigma_real[k])
kernels[i,j,k] <- likelihoods[i,j,k]*density_c
}
}
}
md_a <- rep(0,length(alpha_real))
for (i in 1:length(alpha_real)){
sum(kernels[i,,]) -> md_a[i]
}
fig_5 <- plot_ly(x=~alpha_real,y=md_a)
fig_5
md_b <- rep(0,length(beta_real))
for (i in 1:length(beta_real)){
sum(kernels[,i,]) -> md_b[i]
}
fig_6 <- plot_ly(x=~beta_real,y=md_b)
fig_6
md_s <- rep(0,length(sigma_real))
for (i in 1:length(sigma_real)){
sum(kernels[,,i]) -> md_s[i]
}
fig_7 <- plot_ly(x=~sigma_real,y=md_s)
fig_7
print(alpha_real[which.max(md_a)])
print(beta_real[which.max(md_b)])
print(sigma_real[which.max(md_s)])
fig_5
library(plotly)
md_a <- rep(0,length(alpha_real))
for (i in 1:length(alpha_real)){
sum(kernels[i,,]) -> md_a[i]
}
fig_5 <- plot_ly(x=~alpha_real,y=md_a)
fig_5
md_b <- rep(0,length(beta_real))
for (i in 1:length(beta_real)){
sum(kernels[,i,]) -> md_b[i]
}
fig_6 <- plot_ly(x=~beta_real,y=md_b)
fig_6
md_s <- rep(0,length(sigma_real))
for (i in 1:length(sigma_real)){
sum(kernels[,,i]) -> md_s[i]
}
fig_7 <- plot_ly(x=~sigma_real,y=md_s)
fig_7
md_b <- rep(0,length(beta_real))
for (i in 1:length(beta_real)){
sum(kernels[,i,]) -> md_b[i]
}
fig_6 <- plot_ly(x=~beta_real,y=md_b)
fig_6
ss <- 100
x_obs <- runif(ss,-10,10)
y_obs <- 6 + 2*x_obs + rnorm(ss,0,3)
d <- data.frame(x=x_obs,y=y_obs)
head(d)
g_s <- ggplot(d,aes(x=x,y=y)) + geom_point() + ggtitle("observation")
plot(g_s)
alpha_real <- seq(5,7,0.01)
prior_a <-  rep(density_c,length(alpha_real))
plot(alpha_real,prior_a)
beta_real <- seq(1,3,0.01)
prior_b <-  rep(density_c,length(beta_real))
plot(beta_real,prior_b)
sigma_real <- seq(2,4,0.01)
prior_s <-  rep(density_c,length(sigma_real))
plot(sigma_real,prior_s)
prior_ab <- matrix(density_c,nrow=length(alpha_real),ncol=length(beta_real))
likelihood_f <- function(alpha,beta,sigma){
return(prod(dnorm(y_obs-alpha-beta*x_obs,mean=0,sd=sigma)))
}
likelihoods <- array(0,dim=c(length(alpha_real),length(beta_real),length(sigma_real)))
kernels <- array(0,dim=c(length(alpha_real),length(beta_real),length(sigma_real)))
for (i in 1:length(alpha_real)){
for (j in 1:length(beta_real)) {
for (k in 1:length(sigma_real)) {
likelihoods[i,j,k] <- likelihood_f(alpha_real[i],beta_real[j],sigma_real[k])
kernels[i,j,k] <- likelihoods[i,j,k]*density_c
}
}
}
md_a <- rep(0,length(alpha_real))
for (i in 1:length(alpha_real)){
sum(kernels[i,,]) -> md_a[i]
}
fig_5 <- plot_ly(x=~alpha_real,y=md_a)
fig_5
md_b <- rep(0,length(beta_real))
for (i in 1:length(beta_real)){
sum(kernels[,i,]) -> md_b[i]
}
fig_6 <- plot_ly(x=~beta_real,y=md_b)
fig_6
md_s <- rep(0,length(sigma_real))
for (i in 1:length(sigma_real)){
sum(kernels[,,i]) -> md_s[i]
}
fig_7 <- plot_ly(x=~sigma_real,y=md_s)
fig_7
print(alpha_real[which.max(md_a)])
print(beta_real[which.max(md_b)])
print(sigma_real[which.max(md_s)])
ss <- 10000
x_obs <- runif(ss,-10,10)
y_obs <- 6 + 2*x_obs + rnorm(ss,0,3)
d <- data.frame(x=x_obs,y=y_obs)
head(d)
g_s <- ggplot(d,aes(x=x,y=y)) + geom_point() + ggtitle("observation")
plot(g_s)
alpha_real <- seq(5,7,0.01)
prior_a <-  rep(density_c,length(alpha_real))
plot(alpha_real,prior_a)
beta_real <- seq(1,3,0.01)
prior_b <-  rep(density_c,length(beta_real))
plot(beta_real,prior_b)
sigma_real <- seq(2,4,0.01)
prior_s <-  rep(density_c,length(sigma_real))
plot(sigma_real,prior_s)
prior_ab <- matrix(density_c,nrow=length(alpha_real),ncol=length(beta_real))
likelihood_f <- function(alpha,beta,sigma){
return(prod(dnorm(y_obs-alpha-beta*x_obs,mean=0,sd=sigma)))
}
likelihoods <- array(0,dim=c(length(alpha_real),length(beta_real),length(sigma_real)))
kernels <- array(0,dim=c(length(alpha_real),length(beta_real),length(sigma_real)))
for (i in 1:length(alpha_real)){
for (j in 1:length(beta_real)) {
for (k in 1:length(sigma_real)) {
likelihoods[i,j,k] <- likelihood_f(alpha_real[i],beta_real[j],sigma_real[k])
kernels[i,j,k] <- likelihoods[i,j,k]*density_c
}
}
}
library(plotly)
md_a <- rep(0,length(alpha_real))
for (i in 1:length(alpha_real)){
sum(kernels[i,,]) -> md_a[i]
}
fig_19 <- plot_ly(x=~alpha_real,y=md_a)
fig_19
md_b <- rep(0,length(beta_real))
for (i in 1:length(beta_real)){
sum(kernels[,i,]) -> md_b[i]
}
fig_20 <- plot_ly(x=~beta_real,y=md_b)
fig_20
md_s <- rep(0,length(sigma_real))
for (i in 1:length(sigma_real)){
sum(kernels[,,i]) -> md_s[i]
}
fig_21 <- plot_ly(x=~sigma_real,y=md_s)
fig_21
print(alpha_real[which.max(md_a)])
print(beta_real[which.max(md_b)])
print(sigma_real[which.max(md_s)])
ss <- 100
x_obs <- runif(ss,-10,10)
y_obs <- 6 + 2*x_obs + rnorm(ss,0,3)
d <- data.frame(x=x_obs,y=y_obs)
head(d)
library(brms)
df <- data.frame(x_obs,y_obs)
simple_lm_brms <- brm(
formula = y_obs~x_obs,
family = gaussian(link="identity"),  #期待値はalpha+beta*x,誤差項は正規分布
data = df,
seed=1
)
plot(simple_lm_brms)
ss <- 10000
x_obs <- runif(ss,-10,10)
y_obs <- 6 + 2*x_obs + rnorm(ss,0,3)
d <- data.frame(x=x_obs,y=y_obs)
head(d)
library(brms)
df <- data.frame(x_obs,y_obs)
simple_lm_brms_10000 <- brm(
formula = y_obs~x_obs,
family = gaussian(link="identity"),  #期待値はalpha+beta*x,誤差項は正規分布
data = df,
seed=1
)
plot(simple_lm_brms_10000)
pnorm(365,mean=350,sd=sqrt(200))
pnorm(10,mean=10,sd=sqrt(0.02))
pnorm(30,mean=28,sd=sqrt(8))
pnorm(365,mean=360,sd=sqrt(200))
fish_num_climate <- read.csv("4-1-1-fish-num-2.csv")
view(fish_num_climate)
View(fish_num_climate)
rm(list=ls())
setwd("~/2021_春学期/ゼミ(片山)/seminar_notes_git/20210528")
